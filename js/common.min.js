function setProductThumbHeight()
{
    var ThumbImageWidth = 190;
    var ThumbImageHeight = 250;
	var ImageBoxDiv = $('.ProductList:not(.List) .ProductImage');
	var ImageListDiv = $('.ProductList:not(.List) li');
	var CurrentListHeight = ImageListDiv.height();
	var ProductImageMargin = ImageBoxDiv.css('margin-left')*2;

	var ImageBoxHeight = ThumbImageHeight;

	if (parseInt(ImageBoxDiv.css("padding-top"), 10)) {
		ImageBoxHeight += parseInt(ImageBoxDiv.css("padding-top"), 10) * 2; //Total Padding Width
	}

	if(parseInt(ImageBoxDiv.css("margin-top"), 10)) {
		ImageBoxHeight += parseInt(ImageBoxDiv.css("margin-top"), 10) * 2; //Total Margin Width
	}

	ImageBoxDiv.height(ImageBoxHeight);
	if ($.browser.msie && $.browser.version >= 7 && $.browser.version < 8) {
		// this is a specific browser check because this fix is only applicable for ie7
		ImageBoxDiv.css('line-height', ImageBoxHeight+'px');
	}

	// $('.Content .ProductList.List .ProductDetails').css('margin-left',ThumbImageWidth+2+'px');
	// $('.Content .ProductList.List li').height(Math.max(CurrentListHeight, ThumbImageHeight));
}

// Ensure that all product lists are the same height
function setProductListHeights(imgName, className) {
	// hack job putting this here but it needs to be reused by search ajax pager
	if (typeof(DesignMode) != 'undefined') {
		return;
	}

	if (typeof imgName != 'undefined') {
		if (typeof loadedImages[imgName] != 'undefined') {
			return;
		}

		loadedImages[imgName] = true;
	}

	setProductThumbHeight();

	/**
	 * Sets the height of the elements passed in to match that of the one that
	 * has the greatest height.
	 *
	 * @param ele The element(s) to adjust the height for.
	 * @return void
	 */
	function setHeight(ele) {
		var ele = $(ele),
			maxHeight = 0;
		ele
			// reset the height just in case it was set by the stylesheet so
			// we can detect it
			.css('min-height', 'auto')
			// get the one with the greatest height
			.each(function() {
				if ($(this).height() > maxHeight) {
					maxHeight = $(this).height();
				}
			})
			// and set them all to the greatest height
			.css('min-height', maxHeight);
	}

	function setHeightRows(selector) {
		var $elements = $(selector),
				rows = {},
				key;
		$elements.each(function() {
			var $this = $(this),
					currentTop = $this.offset().top;
			if (typeof rows[currentTop] === 'undefined')
				rows[currentTop] = $this;
			else
				rows[currentTop] = rows[currentTop].add(this);
		});
		for (key in rows) {
			if (!Object.hasOwnProperty.call(rows, key))
				continue;
			setHeight(rows[key]);
		}
	}

	if (!className) {
		className = '.Content';
	}

	setHeightRows(className + ' .ProductList:not(.List) li .ProductDetails');

	if (typeof imgName != 'undefined') {
		setHeightRows(className + ' .ProductList:not(.List) li .ProductPriceRating:has(img[src$=\''+imgName+'\'])');
	}

	setHeightRows(className + ' .ProductList:not(.List) li');
}

$(window).on('load resize', function() {
	if($('.Rating img').length > 0) {
		$('.Rating img').each(function() {
			if($(this).height() == 0) {
				$(this).load(function() {
					// Load rating img and find the tallest product.
					var imgName = $(this).attr('src').split('/');
					var imgKey = imgName.length-1;
					setProductListHeights(imgName[imgKey]);
				});
			} else {
				setProductListHeights();
				return false;
			}
		});
	} else {
		setProductListHeights();
	}
		});

 